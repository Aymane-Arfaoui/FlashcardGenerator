{"ast":null,"code":"var _jsxFileName = \"/Users/aymanearfaoui/Desktop/Concordia2024-2025/winter2025/SOEN 384/lectures/flashCards/flascard-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [flashcards, setFlashcards] = useState([]);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [correctCards, setCorrectCards] = useState([]);\n  const [incorrectCards, setIncorrectCards] = useState([]);\n  const [remainingCards, setRemainingCards] = useState([]);\n  const [activeSection, setActiveSection] = useState('main'); // 'main', 'correct', or 'incorrect'\n\n  useEffect(() => {\n    // Temporary hardcoded cards for testing\n    const hardcodedCards = [{\n      id: 0,\n      question: \"Q1: What is React?\",\n      answer: \"A1: React is a JavaScript library for building user interfaces.\"\n    }, {\n      id: 1,\n      question: \"Q2: What is JSX?\",\n      answer: \"A2: JSX is a syntax extension for JavaScript that looks similar to HTML.\"\n    }];\n    setFlashcards(hardcodedCards);\n    setRemainingCards([...Array(hardcodedCards.length).keys()]);\n\n    // Real fetch can run in parallel for debugging\n    fetch('/flashcards.md').then(response => response.text()).then(text => {\n      console.log(\"Markdown loaded, length:\", text.length);\n      const parsedCards = parseMarkdown(text);\n      console.log(\"Parsed cards:\", parsedCards.length);\n    }).catch(error => console.error('Error:', error));\n  }, []);\n  const parseMarkdown = markdown => {\n    const lines = markdown.split('\\n');\n    const cards = [];\n    let currentQuestion = '';\n    let currentAnswer = '';\n    let inQuestion = false;\n    let inAnswer = false;\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i].trim();\n      if (line.startsWith('**Q') && line.includes(':**')) {\n        // Save the previous Q/A pair if exists\n        if (currentQuestion && currentAnswer) {\n          cards.push({\n            id: cards.length,\n            question: currentQuestion,\n            answer: currentAnswer\n          });\n        }\n\n        // Start new question\n        currentQuestion = line.replace(/\\*\\*/g, '');\n        currentAnswer = '';\n        inQuestion = true;\n        inAnswer = false;\n      } else if (line.startsWith('**A') && line.includes(':**')) {\n        inQuestion = false;\n        inAnswer = true;\n        currentAnswer = line.replace(/\\*\\*/g, '');\n      } else if (inAnswer && line) {\n        currentAnswer += '\\n' + line;\n      } else if (inQuestion && line) {\n        currentQuestion += '\\n' + line;\n      }\n    }\n\n    // Add the last card if exists\n    if (currentQuestion && currentAnswer) {\n      cards.push({\n        id: cards.length,\n        question: currentQuestion,\n        answer: currentAnswer\n      });\n    }\n    return cards;\n  };\n  const handleFlip = () => {\n    setShowAnswer(!showAnswer);\n  };\n  const handleCorrect = () => {\n    const currentId = remainingCards[currentCardIndex];\n    setCorrectCards([...correctCards, currentId]);\n    handleNext();\n  };\n  const handleIncorrect = () => {\n    const currentId = remainingCards[currentCardIndex];\n    setIncorrectCards([...incorrectCards, currentId]);\n    handleNext();\n  };\n  const handleNext = () => {\n    setShowAnswer(false);\n    if (currentCardIndex < remainingCards.length - 1) {\n      setCurrentCardIndex(currentCardIndex + 1);\n    } else {\n      // All cards have been reviewed\n      setCurrentCardIndex(0);\n      setActiveSection('main');\n      setRemainingCards([...Array(flashcards.length).keys()].filter(id => !correctCards.includes(id) && !incorrectCards.includes(id)));\n    }\n  };\n  const switchSection = section => {\n    setActiveSection(section);\n    setCurrentCardIndex(0);\n    setShowAnswer(false);\n  };\n  const getCurrentCards = () => {\n    switch (activeSection) {\n      case 'correct':\n        return correctCards.map(id => flashcards[id]);\n      case 'incorrect':\n        return incorrectCards.map(id => flashcards[id]);\n      default:\n        return remainingCards.map(id => flashcards[id]);\n    }\n  };\n  const currentCards = getCurrentCards();\n  const currentCard = currentCards[currentCardIndex];\n  if (!currentCard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcard-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Flashcards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => switchSection('main'),\n          children: [\"Main Deck (\", remainingCards.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => switchSection('correct'),\n          children: [\"Correct (\", correctCards.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => switchSection('incorrect'),\n          children: [\"Incorrect (\", incorrectCards.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-message\",\n        children: activeSection === 'main' ? \"You've completed all flashcards! Review your correct or incorrect cards.\" : `No cards in the ${activeSection} section yet.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcard-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Flashcards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => switchSection('main'),\n        children: [\"Main Deck (\", remainingCards.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => switchSection('correct'),\n        children: [\"Correct (\", correctCards.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => switchSection('incorrect'),\n        children: [\"Incorrect (\", incorrectCards.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      children: [\"Card \", currentCardIndex + 1, \" of \", currentCards.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcard\",\n      onClick: handleFlip,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flashcard-inner ${showAnswer ? 'flipped' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-front\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentCard.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-back\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentCard.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [showAnswer && activeSection === 'main' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"correct-btn\",\n          onClick: handleCorrect,\n          children: \"Got it right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"incorrect-btn\",\n          onClick: handleIncorrect,\n          children: \"Need more practice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), showAnswer && activeSection !== 'main' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), !showAnswer && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFlip,\n        children: \"Show Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dJ4BNo4Lp+EFfzmYMXYyEuZ1fyM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","flashcards","setFlashcards","currentCardIndex","setCurrentCardIndex","showAnswer","setShowAnswer","correctCards","setCorrectCards","incorrectCards","setIncorrectCards","remainingCards","setRemainingCards","activeSection","setActiveSection","hardcodedCards","id","question","answer","Array","length","keys","fetch","then","response","text","console","log","parsedCards","parseMarkdown","catch","error","markdown","lines","split","cards","currentQuestion","currentAnswer","inQuestion","inAnswer","i","line","trim","startsWith","includes","push","replace","handleFlip","handleCorrect","currentId","handleNext","handleIncorrect","filter","switchSection","section","getCurrentCards","map","currentCards","currentCard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/aymanearfaoui/Desktop/Concordia2024-2025/winter2025/SOEN 384/lectures/flashCards/flascard-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([]);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [correctCards, setCorrectCards] = useState([]);\n  const [incorrectCards, setIncorrectCards] = useState([]);\n  const [remainingCards, setRemainingCards] = useState([]);\n  const [activeSection, setActiveSection] = useState('main'); // 'main', 'correct', or 'incorrect'\n\n  useEffect(() => {\n    // Temporary hardcoded cards for testing\n    const hardcodedCards = [\n      {\n        id: 0,\n        question: \"Q1: What is React?\",\n        answer: \"A1: React is a JavaScript library for building user interfaces.\"\n      },\n      {\n        id: 1,\n        question: \"Q2: What is JSX?\",\n        answer: \"A2: JSX is a syntax extension for JavaScript that looks similar to HTML.\"\n      }\n    ];\n    \n    setFlashcards(hardcodedCards);\n    setRemainingCards([...Array(hardcodedCards.length).keys()]);\n    \n    // Real fetch can run in parallel for debugging\n    fetch('/flashcards.md')\n      .then(response => response.text())\n      .then(text => {\n        console.log(\"Markdown loaded, length:\", text.length);\n        const parsedCards = parseMarkdown(text);\n        console.log(\"Parsed cards:\", parsedCards.length);\n      })\n      .catch(error => console.error('Error:', error));\n  }, []);\n\n  const parseMarkdown = (markdown) => {\n    const lines = markdown.split('\\n');\n    const cards = [];\n    let currentQuestion = '';\n    let currentAnswer = '';\n    let inQuestion = false;\n    let inAnswer = false;\n\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i].trim();\n      \n      if (line.startsWith('**Q') && line.includes(':**')) {\n        // Save the previous Q/A pair if exists\n        if (currentQuestion && currentAnswer) {\n          cards.push({\n            id: cards.length,\n            question: currentQuestion,\n            answer: currentAnswer\n          });\n        }\n        \n        // Start new question\n        currentQuestion = line.replace(/\\*\\*/g, '');\n        currentAnswer = '';\n        inQuestion = true;\n        inAnswer = false;\n      } \n      else if (line.startsWith('**A') && line.includes(':**')) {\n        inQuestion = false;\n        inAnswer = true;\n        currentAnswer = line.replace(/\\*\\*/g, '');\n      }\n      else if (inAnswer && line) {\n        currentAnswer += '\\n' + line;\n      }\n      else if (inQuestion && line) {\n        currentQuestion += '\\n' + line;\n      }\n    }\n    \n    // Add the last card if exists\n    if (currentQuestion && currentAnswer) {\n      cards.push({\n        id: cards.length,\n        question: currentQuestion,\n        answer: currentAnswer\n      });\n    }\n    \n    return cards;\n  };\n\n  const handleFlip = () => {\n    setShowAnswer(!showAnswer);\n  };\n\n  const handleCorrect = () => {\n    const currentId = remainingCards[currentCardIndex];\n    setCorrectCards([...correctCards, currentId]);\n    handleNext();\n  };\n\n  const handleIncorrect = () => {\n    const currentId = remainingCards[currentCardIndex];\n    setIncorrectCards([...incorrectCards, currentId]);\n    handleNext();\n  };\n\n  const handleNext = () => {\n    setShowAnswer(false);\n    if (currentCardIndex < remainingCards.length - 1) {\n      setCurrentCardIndex(currentCardIndex + 1);\n    } else {\n      // All cards have been reviewed\n      setCurrentCardIndex(0);\n      setActiveSection('main');\n      setRemainingCards([...Array(flashcards.length).keys()].filter(\n        id => !correctCards.includes(id) && !incorrectCards.includes(id)\n      ));\n    }\n  };\n\n  const switchSection = (section) => {\n    setActiveSection(section);\n    setCurrentCardIndex(0);\n    setShowAnswer(false);\n  };\n\n  const getCurrentCards = () => {\n    switch (activeSection) {\n      case 'correct':\n        return correctCards.map(id => flashcards[id]);\n      case 'incorrect':\n        return incorrectCards.map(id => flashcards[id]);\n      default:\n        return remainingCards.map(id => flashcards[id]);\n    }\n  };\n\n  const currentCards = getCurrentCards();\n  const currentCard = currentCards[currentCardIndex];\n\n  if (!currentCard) {\n    return (\n      <div className=\"flashcard-app\">\n        <h1>Flashcards</h1>\n        <div className=\"section-buttons\">\n          <button onClick={() => switchSection('main')}>Main Deck ({remainingCards.length})</button>\n          <button onClick={() => switchSection('correct')}>Correct ({correctCards.length})</button>\n          <button onClick={() => switchSection('incorrect')}>Incorrect ({incorrectCards.length})</button>\n        </div>\n        <div className=\"empty-message\">\n          {activeSection === 'main' \n            ? \"You've completed all flashcards! Review your correct or incorrect cards.\" \n            : `No cards in the ${activeSection} section yet.`}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flashcard-app\">\n      <h1>Flashcards</h1>\n      \n      <div className=\"section-buttons\">\n        <button onClick={() => switchSection('main')}>Main Deck ({remainingCards.length})</button>\n        <button onClick={() => switchSection('correct')}>Correct ({correctCards.length})</button>\n        <button onClick={() => switchSection('incorrect')}>Incorrect ({incorrectCards.length})</button>\n      </div>\n      \n      <div className=\"progress\">\n        Card {currentCardIndex + 1} of {currentCards.length}\n      </div>\n      \n      <div className=\"flashcard\" onClick={handleFlip}>\n        <div className={`flashcard-inner ${showAnswer ? 'flipped' : ''}`}>\n          <div className=\"flashcard-front\">\n            <p>{currentCard.question}</p>\n          </div>\n          <div className=\"flashcard-back\">\n            <p>{currentCard.answer}</p>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"controls\">\n        {showAnswer && activeSection === 'main' && (\n          <>\n            <button className=\"correct-btn\" onClick={handleCorrect}>Got it right</button>\n            <button className=\"incorrect-btn\" onClick={handleIncorrect}>Need more practice</button>\n          </>\n        )}\n        {(showAnswer && activeSection !== 'main') && (\n          <button onClick={handleNext}>Next</button>\n        )}\n        {!showAnswer && (\n          <button onClick={handleFlip}>Show Answer</button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}