{"ast":null,"code":"var _jsxFileName = \"/Users/aymanearfaoui/Desktop/Concordia2024-2025/winter2025/SOEN 384/lectures/flashCards/flascard-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n// import flashcardsContent from './flashcards.md'; // This requires special webpack loader configuration\nimport { flashcardsData } from './flashcardsData';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [flashcards, setFlashcards] = useState([]);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [correctCards, setCorrectCards] = useState([]);\n  const [incorrectCards, setIncorrectCards] = useState([]);\n  const [remainingCards, setRemainingCards] = useState([]);\n  const [activeSection, setActiveSection] = useState('main'); // 'main', 'correct', or 'incorrect'\n\n  useEffect(() => {\n    // Use the actual flashcards content directly\n    const flashcardsText = `\n# Studying for 384\n\nLECTURE 1 CONCEPTS: \n\n**Q2: How is a project defined in the context of software project management?**\n\n**A2:** A project is defined as a set of interrelated tasks with a specific goal, having defined start and end dates, funding limits, and resource consumption, ultimately aiming to produce a unique product, service, or result.\n\n**Q3: What are the five key management functions described in Lecture 1, and what does each function entail ?**\n\n**A3:**\n\n**Planning:** Establishing goals, developing strategies, forecasting, budgeting, and documenting project plans.\n\n**Organizing:** Grouping tasks, establishing structures, assigning roles and responsibilities, and creating an organizational hierarchy.\n\n**Staffing:** Recruiting, training, evaluating, compensating, and sometimes replacing personnel to ensure the right people are in place.\n\n**Directing:** Leading and supervising team members, motivating personnel, delegating authority, coordinating activities, and resolving conflicts.\n\n**Controlling:** Monitoring progress, measuring performance against the plan, initiating corrective actions, and ensuring the project stays on track.`;\n    console.log(\"Parsing flashcards...\");\n    const parsedCards = parseMarkdown(flashcardsText);\n    console.log(`Found ${parsedCards.length} cards`);\n    if (parsedCards.length > 0) {\n      setFlashcards(parsedCards);\n      setRemainingCards([...Array(parsedCards.length).keys()]);\n    } else {\n      console.error(\"No flashcards were parsed!\");\n    }\n  }, []);\n  const parseMarkdown = markdown => {\n    // Improved parsing logic\n    const questionRegex = /\\*\\*(Q\\d+:.*?)\\*\\*/g;\n    const answerRegex = /\\*\\*(A\\d+:.*?)\\*\\*/g;\n    const questions = [...markdown.matchAll(questionRegex)].map(m => m[1]);\n    const answers = [...markdown.matchAll(answerRegex)].map(m => m[1]);\n    console.log(`Found ${questions.length} questions and ${answers.length} answers`);\n    const cards = [];\n    for (let i = 0; i < Math.min(questions.length, answers.length); i++) {\n      cards.push({\n        id: i,\n        question: questions[i],\n        answer: answers[i]\n      });\n    }\n    return cards;\n  };\n  const handleFlip = () => {\n    setShowAnswer(!showAnswer);\n  };\n  const handleCorrect = () => {\n    const currentId = remainingCards[currentCardIndex];\n    setCorrectCards([...correctCards, currentId]);\n    handleNext();\n  };\n  const handleIncorrect = () => {\n    const currentId = remainingCards[currentCardIndex];\n    setIncorrectCards([...incorrectCards, currentId]);\n    handleNext();\n  };\n  const handleNext = () => {\n    setShowAnswer(false);\n    if (currentCardIndex < remainingCards.length - 1) {\n      setCurrentCardIndex(currentCardIndex + 1);\n    } else {\n      // All cards have been reviewed\n      setCurrentCardIndex(0);\n      setActiveSection('main');\n      setRemainingCards([...Array(flashcards.length).keys()].filter(id => !correctCards.includes(id) && !incorrectCards.includes(id)));\n    }\n  };\n  const switchSection = section => {\n    setActiveSection(section);\n    setCurrentCardIndex(0);\n    setShowAnswer(false);\n  };\n  const getCurrentCards = () => {\n    switch (activeSection) {\n      case 'correct':\n        return correctCards.map(id => flashcards[id]);\n      case 'incorrect':\n        return incorrectCards.map(id => flashcards[id]);\n      default:\n        return remainingCards.map(id => flashcards[id]);\n    }\n  };\n  const currentCards = getCurrentCards();\n  const currentCard = currentCards[currentCardIndex];\n  if (!currentCard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcard-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Flashcards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => switchSection('main'),\n          children: [\"Main Deck (\", remainingCards.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => switchSection('correct'),\n          children: [\"Correct (\", correctCards.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => switchSection('incorrect'),\n          children: [\"Incorrect (\", incorrectCards.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-message\",\n        children: activeSection === 'main' ? \"You've completed all flashcards! Review your correct or incorrect cards.\" : `No cards in the ${activeSection} section yet.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcard-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Flashcards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => switchSection('main'),\n        children: [\"Main Deck (\", remainingCards.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => switchSection('correct'),\n        children: [\"Correct (\", correctCards.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => switchSection('incorrect'),\n        children: [\"Incorrect (\", incorrectCards.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      children: [\"Card \", currentCardIndex + 1, \" of \", currentCards.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcard\",\n      onClick: handleFlip,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flashcard-inner ${showAnswer ? 'flipped' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-front\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentCard.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-back\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentCard.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [showAnswer && activeSection === 'main' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"correct-btn\",\n          onClick: handleCorrect,\n          children: \"Got it right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"incorrect-btn\",\n          onClick: handleIncorrect,\n          children: \"Need more practice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), showAnswer && activeSection !== 'main' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), !showAnswer && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFlip,\n        children: \"Show Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dJ4BNo4Lp+EFfzmYMXYyEuZ1fyM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","flashcardsData","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","flashcards","setFlashcards","currentCardIndex","setCurrentCardIndex","showAnswer","setShowAnswer","correctCards","setCorrectCards","incorrectCards","setIncorrectCards","remainingCards","setRemainingCards","activeSection","setActiveSection","flashcardsText","console","log","parsedCards","parseMarkdown","length","Array","keys","error","markdown","questionRegex","answerRegex","questions","matchAll","map","m","answers","cards","i","Math","min","push","id","question","answer","handleFlip","handleCorrect","currentId","handleNext","handleIncorrect","filter","includes","switchSection","section","getCurrentCards","currentCards","currentCard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/aymanearfaoui/Desktop/Concordia2024-2025/winter2025/SOEN 384/lectures/flashCards/flascard-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n// import flashcardsContent from './flashcards.md'; // This requires special webpack loader configuration\nimport { flashcardsData } from './flashcardsData';\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([]);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [correctCards, setCorrectCards] = useState([]);\n  const [incorrectCards, setIncorrectCards] = useState([]);\n  const [remainingCards, setRemainingCards] = useState([]);\n  const [activeSection, setActiveSection] = useState('main'); // 'main', 'correct', or 'incorrect'\n\n  useEffect(() => {\n    // Use the actual flashcards content directly\n    const flashcardsText = `\n# Studying for 384\n\nLECTURE 1 CONCEPTS: \n\n**Q2: How is a project defined in the context of software project management?**\n\n**A2:** A project is defined as a set of interrelated tasks with a specific goal, having defined start and end dates, funding limits, and resource consumption, ultimately aiming to produce a unique product, service, or result.\n\n**Q3: What are the five key management functions described in Lecture 1, and what does each function entail ?**\n\n**A3:**\n\n**Planning:** Establishing goals, developing strategies, forecasting, budgeting, and documenting project plans.\n\n**Organizing:** Grouping tasks, establishing structures, assigning roles and responsibilities, and creating an organizational hierarchy.\n\n**Staffing:** Recruiting, training, evaluating, compensating, and sometimes replacing personnel to ensure the right people are in place.\n\n**Directing:** Leading and supervising team members, motivating personnel, delegating authority, coordinating activities, and resolving conflicts.\n\n**Controlling:** Monitoring progress, measuring performance against the plan, initiating corrective actions, and ensuring the project stays on track.`;\n    \n    console.log(\"Parsing flashcards...\");\n    const parsedCards = parseMarkdown(flashcardsText);\n    console.log(`Found ${parsedCards.length} cards`);\n    \n    if (parsedCards.length > 0) {\n      setFlashcards(parsedCards);\n      setRemainingCards([...Array(parsedCards.length).keys()]);\n    } else {\n      console.error(\"No flashcards were parsed!\");\n    }\n  }, []);\n\n  const parseMarkdown = (markdown) => {\n    // Improved parsing logic\n    const questionRegex = /\\*\\*(Q\\d+:.*?)\\*\\*/g;\n    const answerRegex = /\\*\\*(A\\d+:.*?)\\*\\*/g;\n    \n    const questions = [...markdown.matchAll(questionRegex)].map(m => m[1]);\n    const answers = [...markdown.matchAll(answerRegex)].map(m => m[1]);\n    \n    console.log(`Found ${questions.length} questions and ${answers.length} answers`);\n    \n    const cards = [];\n    for (let i = 0; i < Math.min(questions.length, answers.length); i++) {\n      cards.push({\n        id: i,\n        question: questions[i],\n        answer: answers[i]\n      });\n    }\n    \n    return cards;\n  };\n\n  const handleFlip = () => {\n    setShowAnswer(!showAnswer);\n  };\n\n  const handleCorrect = () => {\n    const currentId = remainingCards[currentCardIndex];\n    setCorrectCards([...correctCards, currentId]);\n    handleNext();\n  };\n\n  const handleIncorrect = () => {\n    const currentId = remainingCards[currentCardIndex];\n    setIncorrectCards([...incorrectCards, currentId]);\n    handleNext();\n  };\n\n  const handleNext = () => {\n    setShowAnswer(false);\n    if (currentCardIndex < remainingCards.length - 1) {\n      setCurrentCardIndex(currentCardIndex + 1);\n    } else {\n      // All cards have been reviewed\n      setCurrentCardIndex(0);\n      setActiveSection('main');\n      setRemainingCards([...Array(flashcards.length).keys()].filter(\n        id => !correctCards.includes(id) && !incorrectCards.includes(id)\n      ));\n    }\n  };\n\n  const switchSection = (section) => {\n    setActiveSection(section);\n    setCurrentCardIndex(0);\n    setShowAnswer(false);\n  };\n\n  const getCurrentCards = () => {\n    switch (activeSection) {\n      case 'correct':\n        return correctCards.map(id => flashcards[id]);\n      case 'incorrect':\n        return incorrectCards.map(id => flashcards[id]);\n      default:\n        return remainingCards.map(id => flashcards[id]);\n    }\n  };\n\n  const currentCards = getCurrentCards();\n  const currentCard = currentCards[currentCardIndex];\n\n  if (!currentCard) {\n    return (\n      <div className=\"flashcard-app\">\n        <h1>Flashcards</h1>\n        <div className=\"section-buttons\">\n          <button onClick={() => switchSection('main')}>Main Deck ({remainingCards.length})</button>\n          <button onClick={() => switchSection('correct')}>Correct ({correctCards.length})</button>\n          <button onClick={() => switchSection('incorrect')}>Incorrect ({incorrectCards.length})</button>\n        </div>\n        <div className=\"empty-message\">\n          {activeSection === 'main' \n            ? \"You've completed all flashcards! Review your correct or incorrect cards.\" \n            : `No cards in the ${activeSection} section yet.`}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flashcard-app\">\n      <h1>Flashcards</h1>\n      \n      <div className=\"section-buttons\">\n        <button onClick={() => switchSection('main')}>Main Deck ({remainingCards.length})</button>\n        <button onClick={() => switchSection('correct')}>Correct ({correctCards.length})</button>\n        <button onClick={() => switchSection('incorrect')}>Incorrect ({incorrectCards.length})</button>\n      </div>\n      \n      <div className=\"progress\">\n        Card {currentCardIndex + 1} of {currentCards.length}\n      </div>\n      \n      <div className=\"flashcard\" onClick={handleFlip}>\n        <div className={`flashcard-inner ${showAnswer ? 'flipped' : ''}`}>\n          <div className=\"flashcard-front\">\n            <p>{currentCard.question}</p>\n          </div>\n          <div className=\"flashcard-back\">\n            <p>{currentCard.answer}</p>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"controls\">\n        {showAnswer && activeSection === 'main' && (\n          <>\n            <button className=\"correct-btn\" onClick={handleCorrect}>Got it right</button>\n            <button className=\"incorrect-btn\" onClick={handleIncorrect}>Need more practice</button>\n          </>\n        )}\n        {(showAnswer && activeSection !== 'main') && (\n          <button onClick={handleNext}>Next</button>\n        )}\n        {!showAnswer && (\n          <button onClick={handleFlip}>Show Answer</button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}